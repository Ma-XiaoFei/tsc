{"version":3,"sources":["serviceWorker.js","menus.jsx","component/Content.jsx","component/Layout.jsx","index.js"],"names":["Boolean","window","location","hostname","match","SubMenu","Menu","Slide","handleClick","e","console","log","width","src","alt","theme","onClick","this","style","maxWidth","defaultSelectedKeys","defaultOpenKeys","mode","key","title","type","ItemGroup","Item","React","Component","Content","Layout","Main","state","columns","label","prop","render","size","data","date","name","address","margin","overflow","padding","background","inline","className","placeholder","Option","value","nativeType","textAlign","layout","total","pageSizes","pageSize","Header","Footer","Sider","Container","height","position","left","marginLeft","boxSizing","href","bottom","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3850db7c.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport { Menu, Icon } from 'antd';\n\nconst { SubMenu } = Menu;\n\nclass Slide extends React.Component {\n  handleClick = e => {\n    console.log('click ', e);\n  };\n\n  render() {\n    return (\n        <div>\n        <div>\n          <img width='100%' src=\"https://ss0.bdstatic.com/70cFuHSh_Q1YnxGkpoWK1HF6hhy/it/u=3209370120,2008812818&fm=26&gp=0.jpg\" alt=\"\"/>\n        </div>\n      <Menu \n      theme='dark'\n        onClick={this.handleClick}\n        style={{ maxWidth: 800}}\n        defaultSelectedKeys={['1']}\n        defaultOpenKeys={['sub1','sub2','sub3']}\n        mode=\"inline\"\n      >\n        <SubMenu\n          key=\"sub1\"\n          title={\n            <span>\n              <Icon type=\"mail\" />\n              <span>Navigation One</span>\n            </span>\n          }\n        >\n          <Menu.ItemGroup key=\"g1\" title=\"Item 1\">\n            <Menu.Item key=\"1\">Option 1</Menu.Item>\n            <Menu.Item key=\"2\">Option 2</Menu.Item>\n          </Menu.ItemGroup>\n          <Menu.ItemGroup key=\"g2\" title=\"Item 2\">\n            <Menu.Item key=\"3\">Option 3</Menu.Item>\n            <Menu.Item key=\"4\">Option 4</Menu.Item>\n          </Menu.ItemGroup>\n        </SubMenu>\n        <SubMenu\n          key=\"sub2\"\n          title={\n            <span>\n              <Icon type=\"appstore\" />\n              <span>Navigation Two</span>\n            </span>\n          }\n        >\n          <Menu.Item key=\"5\">Option 5</Menu.Item>\n          <Menu.Item key=\"6\">Option 6</Menu.Item>\n          <SubMenu key=\"sub3\" title=\"Submenu\">\n            <Menu.Item key=\"7\">Option 7</Menu.Item>\n            <Menu.Item key=\"8\">Option 8</Menu.Item>\n          </SubMenu>\n        </SubMenu>\n        <SubMenu\n          key=\"sub4\"\n          title={\n            <span>\n              <Icon type=\"setting\" />\n              <span>Navigation Three</span>\n            </span>\n          }\n        >\n          <Menu.Item key=\"9\">Option 9</Menu.Item>\n          <Menu.Item key=\"10\">Option 10</Menu.Item>\n          <Menu.Item key=\"11\">Option 11</Menu.Item>\n          <Menu.Item key=\"12\">Option 12</Menu.Item>\n        </SubMenu>\n      </Menu>\n      \n    </div>\n    );\n  }\n}\n\n\n\nexport{ Slide};","import React from 'react';\nimport { Layout, Row, Col} from 'antd';\nimport { Button, Upload, Form, Input, Select, Table, Pagination } from 'element-react';\nimport 'element-theme-default';\nlet { Content } = Layout;\n\n\nclass Main extends React.Component {\n    constructor() {\n        super()\n        this.state = {\n            columns: [\n                {\n                    label: \"日期\",\n                    prop: \"date\",\n                    width: 180\n                },\n                {\n                    label: \"姓名\",\n                    prop: \"name\",\n                    width: 180\n                },\n                {\n                    label: \"地址\",\n                    prop: \"address\"\n                }, {\n                    label: '操作',\n                    prop: 'make',\n                    render() {\n                        return (<span><Button size='small' type='primary'>编辑</Button><Button size='small' type='danger'>删除</Button></span>)\n                    }\n                }\n            ],\n            data: [{\n                date: '2016-05-02',\n                name: '王小虎',\n                address: '上海市普陀区金沙江路 1518 弄'\n            }, {\n                date: '2016-05-04',\n                name: '王小虎',\n                address: '上海市普陀区金沙江路 1517 弄'\n            }, {\n                date: '2016-05-01',\n                name: '王小虎',\n                address: '上海市普陀区金沙江路 1519 弄'\n            }, {\n                date: '2016-05-03',\n                name: '王小虎',\n                address: '上海市普陀区金沙江路 1516 弄'\n            }, {\n                date: '2016-05-04',\n                name: '王小虎',\n                address: '上海市普陀区金沙江路 1517 弄'\n            }, {\n                date: '2016-05-01',\n                name: '王小虎',\n                address: '上海市普陀区金沙江路 1519 弄'\n            }, {\n                date: '2016-05-03',\n                name: '王小虎',\n                address: '上海市普陀区金沙江路 1516 弄'\n            }, {\n                date: '2016-05-04',\n                name: '王小虎',\n                address: '上海市普陀区金沙江路 1517 弄'\n            }, {\n                date: '2016-05-01',\n                name: '王小虎',\n                address: '上海市普陀区金沙江路 1519 弄'\n            }, {\n                date: '2016-05-03',\n                name: '王小虎',\n                address: '上海市普陀区金沙江路 1516 弄'\n            }, {\n                date: '2016-05-04',\n                name: '王小虎',\n                address: '上海市普陀区金沙江路 1517 弄'\n            }, {\n                date: '2016-05-01',\n                name: '王小虎',\n                address: '上海市普陀区金沙江路 1519 弄'\n            }]\n        }\n    }\n    render() {\n        return (\n            <div>\n                <Content style={{ margin: '24px 16px 0', overflow: 'initial' }}>\n                    <div style={{ padding: 24, background: '#fff' }}>\n                        <Form inline={true} className=\"demo-form-inline\">\n                                    <Form.Item>\n                                        <Input placeholder=\"审批人\" ></Input>\n                                    </Form.Item>\n                            <Form.Item>\n                                <Select placeholder=\"活动区域\">\n                                    <Select.Option label=\"区域一\" value=\"shanghai\"></Select.Option>\n                                    <Select.Option label=\"区域二\" value=\"beijing\"></Select.Option>\n                                </Select>\n                            </Form.Item>\n                            <Form.Item>\n                                <Input placeholder=\"审批人\" ></Input>\n                            </Form.Item>\n                            <Form.Item>\n                                <Input placeholder=\"审批人\" ></Input>\n                            </Form.Item>\n                            <Form.Item>\n                                <Select placeholder=\"活动区域\">\n                                    <Select.Option label=\"区域一\" value=\"shanghai\"></Select.Option>\n                                    <Select.Option label=\"区域二\" value=\"beijing\"></Select.Option>\n                                </Select>\n                            </Form.Item>\n                            <Form.Item>\n                                <Button nativeType=\"submit\" type=\"primary\">查询</Button>\n                            </Form.Item>\n                        </Form>\n                    </div>\n                    <Table\n                        // style={{ width: '100%' }}\n                        columns={this.state.columns}\n                        // maxHeight={500}\n                        data={this.state.data}\n                    />\n                    {/* <div className=\"block\"> */}\n                    <Pagination style={{ textAlign: 'center', margin: '20px' }} layout=\"total, sizes, prev, pager, next, jumper\" total={4000} pageSizes={[100, 200, 300, 400]} pageSize={100} />\n                    {/* </div> */}\n\n                </Content>\n            </div>\n        )\n    }\n\n}\n\n\n\nexport default Main;","\nimport React from 'react'\nimport {Slide} from '../menus';\nimport { Layout, Breadcrumb } from 'antd';\nimport Main from './Content';\nconst { Header, Footer, Sider} = Layout;\n\n\n\nfunction Container (){\n    return (\n    <Layout>\n        <Sider\n          style={{\n            overflow: 'auto',\n            height: '100vh',\n            position: 'fixed',\n            left: 0,\n          }}\n        >\n          \n            <div className=\"logo\" />\n            <Slide></Slide>\n          \n        </Sider>\n        <Layout style={{ marginLeft: 200 }}>\n          <Header style={{ background: '#fff', padding: 0 }}>\n          <Breadcrumb style={{padding:'20px', boxSizing:'border-box'}}>\n    <Breadcrumb.Item>Home</Breadcrumb.Item>\n    <Breadcrumb.Item>\n      <a href=\"\">Application Center</a>\n    </Breadcrumb.Item>\n    <Breadcrumb.Item>\n      <a href=\"\">Application List</a>\n    </Breadcrumb.Item>\n    <Breadcrumb.Item>An Application</Breadcrumb.Item>\n  </Breadcrumb>\n          </Header>\n          <Main></Main>\n          <Footer style={{ textAlign: 'center', position:'',bottom:0 }}>Ant Design ©2018 Created by Ant UED</Footer>\n        </Layout>\n      </Layout>);\n}\n\n\n\nexport default Container","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css'\nimport * as serviceWorker from './serviceWorker';\n\nimport Container from './component/Layout'\nconsole.log(ReactDOM)\n\nReactDOM.render(\n    <Container/>,\n  document.getElementById('root'),\n);\nserviceWorker.unregister();\n"],"sourceRoot":""}